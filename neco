#!/usr/bin/env php
<?php

require_once __DIR__ . '/vendor/autoload.php';

require_once 'src/helpers.php';
require_once 'src/libraries/Color.php';
require_once 'src/libraries/simple_html_dom.php';
require_once 'src/commands/BaseCommand.php';
require_once 'src/commands/GetSchemaCommand.php';
require_once 'src/commands/ImportGpwInstrumentsCommand.php';
require_once 'src/commands/ImportGpwTypesCommand.php';
require_once 'src/commands/RatingsSyncBackCommand.php';
require_once 'src/commands/RatingsSyncCommand.php';
require_once 'src/commands/ThumbnailsGenerationCommand.php';
require_once 'src/commands/UpdateGpwInstrumentsCommand.php';

// Environment variables
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__ . '/');
$dotenv->load();

// Redis
Predis\Autoloader::register();

// Commands
$commandMap = [
    'get-schema' => new Commands\GetSchemaCommand(),
    'import:gpw-instruments' => new Commands\ImportGpwInstrumentsCommand(),
    'import:gpw-types' => new Commands\ImportGpwTypesCommand(),
    'sync-back' => new Commands\RatingsSyncBackCommand(),
    'sync' => new Commands\RatingsSyncCommand(),
    'update:gpw-instruments' => new Commands\UpdateGpwInstrumentsCommand(),
    'thumbnails:generate' => new Commands\ThumbnailsGenerationCommand(),
];

$commandName = $argv[1] ?? null;

if (!$commandName) {
    Libraries\Color::print("Lista poleceń:\n", 'lightgreen');

    foreach ($commandMap as $commandName => $command) {
        Libraries\Color::print("$commandName - ", 'lightorange');
        Libraries\Color::print($command->getDescription() . "\n", 'white');
    }

    exit(0);
}

$command = $commandMap[$commandName] ?? null;

if ($command) {
    $command->handle(array_slice($argv, 1));
} else {
    Libraries\Color::print("Wystąpił błąd:\n", 'lightred');
    Libraries\Color::print("Nieznane polecenie: ", 'white');
    Libraries\Color::print("$commandName\n", 'lightorange');
}